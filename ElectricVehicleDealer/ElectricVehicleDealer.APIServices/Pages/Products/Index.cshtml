@page "/products"
@model ElectricVehicleDealer.Presentation.Pages.Products.IndexModel
@{
    Layout = "_StoreLayout";
    ViewData["Title"] = "Danh mục xe điện EcoRide";
}

<section class="store-section">
    <div class="store-container">
        <div class="section-header">
            <div>
                <h1>Dòng xe EcoRide 2025</h1>
                <p>Khám phá các mẫu xe điện với công nghệ pin tiên tiến, hiệu suất vượt trội và hệ sinh thái dịch vụ thông minh.</p>
            </div>
            <div class="section-action">
                <a href="/scheduling/test-drive">Đặt lịch lái thử</a>
            </div>
        </div>

        <div class="store-form">
            <div class="form-grid">
                <div class="form-control-modern">
                    <label>Phân khúc</label>
                    <select>
                        <option>Tất cả</option>
                        <option>Urban Compact</option>
                        <option>Executive Sedan</option>
                        <option>Performance SUV</option>
                        <option>Logistics Fleet</option>
                    </select>
                </div>
                <div class="form-control-modern">
                    <label>Tầm giá</label>
                    <select>
                        <option>Tất cả</option>
                        <option>Dưới 1 tỷ</option>
                        <option>1 - 1.5 tỷ</option>
                        <option>Trên 1.5 tỷ</option>
                    </select>
                </div>
                <div class="form-control-modern">
                    <label>Công nghệ pin</label>
                    <select>
                        <option>Pin thể rắn</option>
                        <option>LFP</option>
                        <option>NCM</option>
                    </select>
                </div>
                <div class="form-control-modern">
                    <label>Tự lái</label>
                    <select>
                        <option>ADAS 2.5</option>
                        <option>ADAS 3.0</option>
                        <option>Hỗ trợ cơ bản</option>
                    </select>
                </div>
            </div>
            <div>
                <button class="btn-secondary" type="button">Đặt lại</button>
                <button class="btn-primary" type="button">Áp dụng</button>
            </div>
        </div>

        <div class="product-grid">
            @foreach (var v in Model.Vehicles)
            {
                <article class="product-card">
                    <figure>
                        <img src="/images/bike3.jpg" alt="@v.Model" />
                    </figure>
                    <div class="product-info">
                        <h3>@v.Model</h3>
                        <p>Giá khởi điểm</p>
                    </div>
                    <div class="product-meta">
                        <span class="price">@String.Format("{0:N0} ₫", v.Price)</span>
                        <a class="btn-secondary" href="/products/detail/@v.VehicleId">Xem chi tiết</a>
                    </div>
                </article>
            }
        </div>
    </div>
</section>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const productGrid = document.querySelector('.product-grid');
            if (!productGrid || typeof signalR === 'undefined') {
                return;
            }

            const listEndpoint = '/products?handler=List';
            const priceFormatter = new Intl.NumberFormat('vi-VN');

            const connection = new signalR.HubConnectionBuilder()
                .withUrl('/hubs/vehicle')
                .withAutomaticReconnect()
                .build();

            connection.onreconnected(refreshProducts);
            connection.on('VehicleCatalogChanged', refreshProducts);

            async function refreshProducts() {
                try {
                    const response = await fetch(listEndpoint, { headers: { 'Accept': 'application/json' } });
                    if (!response.ok) {
                        throw new Error('Response not ok');
                    }

                    const data = await response.json();
                    const vehicles = Array.isArray(data) ? data : [];
                    renderProducts(vehicles);
                } catch (error) {
                    console.error('Không thể tải danh sách xe.', error);
                }
            }

            function renderProducts(vehicles) {
                if (!vehicles.length) {
                    productGrid.innerHTML = '<div class="product-empty-state">Hiện chưa có xe nào trong danh mục.</div>';
                    return;
                }

                const cards = vehicles.map(vehicle => {
                    const vehicleId = vehicle.vehicleId ?? vehicle.VehicleId;
                    const model = vehicle.model ?? vehicle.Model ?? 'EcoRide';
                    const priceValue = Number(vehicle.price ?? vehicle.Price ?? 0);
                    const formattedPrice = priceFormatter.format(priceValue);

                    return `
                        <article class="product-card" data-vehicle-id="${vehicleId}">
                            <figure>
                                <img src="/images/bike3.jpg" alt="${model}" />
                            </figure>
                            <div class="product-info">
                                <h3>${model}</h3>
                                <p>Giá khởi điểm</p>
                            </div>
                            <div class="product-meta">
                                <span class="price">${formattedPrice} ₫</span>
                                <a class="btn-secondary" href="/products/detail/${vehicleId}">Xem chi tiết</a>
                            </div>
                        </article>`;
                });

                productGrid.innerHTML = cards.join('');
            }

            async function start() {
                try {
                    await connection.start();
                    await refreshProducts();
                } catch (err) {
                    console.error('Không thể kết nối SignalR.', err);
                    setTimeout(start, 5000);
                }
            }

            start();
        });
    </script>
}
